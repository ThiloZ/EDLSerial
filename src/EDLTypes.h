#ifndef EDL_TYPES_H
#define EDL_TYPES_H

#include <stdint.h>

struct EDLFrame {
  uint16_t frameStamp;
  uint16_t RPM;
  uint16_t MAP;
  uint8_t TPS;
  int8_t IAT;
  int8_t debugUnused;
  float Batt;
  int8_t TPSRate;
  float VE;
  float IgnAngle;
  uint8_t Warmup;
  float InjOpeningTime;
  uint8_t EMUState;
  uint16_t Egt1;
  uint16_t Egt2;
  float knockValue;
  uint16_t ignDTH;
  uint16_t ignDTL;
  float mainLoopSpeed;
  uint16_t idleTarget;
  uint8_t idleDC;
  uint8_t idleStep;
  float idleAngleCorr;
  uint8_t idleControlActive;
  int8_t curentPIDCorrection;
  float dwellTime;
  float dwellError;
  uint8_t overdwell;
  float pulseWidth;
  uint8_t ase;
  uint8_t fuelCut;
  float wboRI;
  uint8_t wboHeaterDC;
  float wboVS;
  uint8_t accEnrich;
  float accEnrichPW;
  float egoCorrection;
  float wboIPMeas;
  float wboIPNorm;
  float wboLambda;
  float pidPTerm;
  float pidITerm;
  float pidDTerm;
  uint8_t wasReset;
  float engineNoise;
  float wboAFR;
  float afrTarget;
  float profiler;
  uint16_t debugW;
  float knockLevel;
  float knockFuelEnrich;
  float knockIgnRetard;
  float iatIgnTrim;
  float cltIgnTrim;
  float ignFromTable;
  float vssFreq;
  float vssSpeed;
  float gearRatio;
  int8_t gear;
  uint8_t shiftLightOn;
  uint8_t pwmOutputDC;
  uint8_t Baro;
  uint8_t BaroCorr;
  uint8_t lcActive;
  float lcIgnRetard;
  int8_t lcFuelEnrich;
  float analogIn1;
  float analogIn2;
  float analogIn3;
  float analogIn4;
  uint8_t ignSyncStatus;
  uint8_t ignError;
  uint8_t boostDC;
  uint8_t boostDCFromTable;
  uint16_t boostTarget;
  uint8_t boostCorrection;
  uint8_t boostTableSet;
  uint16_t boostTargetFromTable;
  int8_t boostPIDCorrection;
  uint8_t camSyncPrimTooth;
  uint8_t nitrousActive;
  float nitrousIgnMod;
  uint8_t nitrousFuelScale;
  uint8_t flatShiftActive;
  uint8_t flatShiftCutSpark;
  uint8_t flatShiftCutFuel;
  uint8_t parametricOutput1;
  uint8_t camSyncPresent;
  uint8_t parametricOutput2;
  float accIgnCorr;
  float injDC;
  int8_t emuTemp;
  uint8_t iatFuelCorr;
  uint8_t parametricOutput3;
  uint8_t parametricOutput4;
  float cam1Angle;
  float cam2Angle;
  uint8_t cam1ValveDC;
  uint8_t cam2ValveDC;
  float cam1AngleTarget;
  float cam2AngleTarget;
  uint8_t cam2Present;
  uint8_t pitLimiterActive;
  uint8_t pitLimiterTorqueReduction;
  float oilPressure;
  uint8_t oilTemperature;
  float fuelPressure;
  int16_t CLT;
  uint8_t sparkCutPercent;
  float etcDC;
  float etcTarget;
  float etcPos;
  float etcError;
  float etcDeltaError;
  uint8_t tablesSet;
  uint8_t vtecOn;
  float flexFuelFrequency;
  float flexFuelEthanolContent;
  float ffBlendVE;
  float ffBlendIgn;
  float ffBlendAFR;
  float ffBlendBoost;
  int8_t ffTemp;
  uint8_t ffTempFuelCorr;
  uint8_t alsActive;
  float alsIgnAngle;
  uint8_t alsSparkCut;
  int8_t alsFuelCorr;
  float ffBlendCrankingFuel;
  uint8_t ignSparkCount;
  uint8_t idleIgnCutPercent;
  float tpsVoltage;
  float dbwPotError;
  uint16_t cel;
  uint16_t tcdRPM;
  uint16_t tcdRPMRaw;
  float tcTorqueReduction;
  float ffBlendWarmup;
  float ffBlendASE;
  uint8_t canBUSState;
  uint8_t canBUSSwitech;
  uint8_t tcAdjPos;
  uint16_t RPM2nd;
  uint16_t deltaFPR;
  uint16_t fprCorrection;
  uint8_t muxSwitch;
  uint8_t fuelLevel;
  float CANain1;
  float CANain2;
  float CANain3;
  float CANain4;
  uint8_t inj1Trim;
  uint8_t inj2Trim;
  uint8_t inj3Trim;
  uint8_t inj4Trim;
  uint8_t inj5Trim;
  uint8_t inj6Trim;
  int8_t boostDCErrCor;
  uint16_t knockBits;
  uint16_t ralTarget;
  float ralIgnition;
  uint8_t ralActive;
  float etcFrictionCorr;
  uint8_t canSwitch;
  uint16_t acPressure;
  uint8_t acClutch;
  int8_t chargeTemp;
  float lambdaTarget;
  int8_t acEvap;
  float scondarypulseWidth;
  float secondaryInjDC;
  float secondaryInjSplit;
  uint8_t miscOutputs;
  uint8_t miscFlags;
  uint8_t decEnrich;
  float decEnrichPW;
  uint16_t ignCorrections;
  uint16_t fuelCorrections;
  float timer1;
  float timer2;
  uint8_t timerFuelEnrich;
  uint8_t timerBoostCorr;
  float timerIgnCorr;
  float nitrousFuelAdder;
  uint8_t mswitchState;
  float fcProbability;
  uint8_t ffFuelScale;
  uint8_t gcActive;
  float fuelUsage;
  uint16_t injectionAngle;
  uint8_t gearBoxOilTemperature;
  uint8_t reserved1b;
  uint16_t reserved2;
  uint16_t reserved3;
  uint8_t reserved4;
};

#endif